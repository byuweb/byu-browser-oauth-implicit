{"version":3,"file":"implicit-grant.nomodule.min.js","sources":["../node_modules/@byuweb/browser-oauth/constants.js","../src/implicit-grant.js"],"sourcesContent":["export const EVENT_PREFIX = 'byu-browser-oauth';\n\nexport const EVENT_STATE_CHANGE = `${EVENT_PREFIX}-state-changed`;\nexport const EVENT_LOGIN_REQUESTED = `${EVENT_PREFIX}-login-requested`;\nexport const EVENT_LOGOUT_REQUESTED = `${EVENT_PREFIX}-logout-requested`;\nexport const EVENT_REFRESH_REQUESTED = `${EVENT_PREFIX}-refresh-requested`;\nexport const EVENT_CURRENT_INFO_REQUESTED = `${EVENT_PREFIX}-current-info-requested`;\n\nexport const STATE_INDETERMINATE = 'indeterminate';\nexport const STATE_UNAUTHENTICATED = 'unauthenticated';\nexport const STATE_AUTHENTICATED = 'authenticated';\nexport const STATE_AUTHENTICATING = 'authenticating';\nexport const STATE_REFRESHING = 'refreshing';\nexport const STATE_EXPIRED = 'expired';\nexport const STATE_ERROR = 'error';\n\n","/*\n * Copyright 2018 Brigham Young University\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *    http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as authn from '../node_modules/@byuweb/browser-oauth/constants.js';\n\nexport const DEFAULT_ISSUER = 'https://api.byu.edu';\n\nlet config;\nconst observers = {};\nlet store = Object.freeze({ state: authn.STATE_INDETERMINATE });\n\n/*\n * TODOS:\n *  - implement logout\n *  - implement requireAuthentication\n */\n\n/**\n * @typedef {} ImplicitConfig\n * @prop {string} clientId\n * @prop {?string} issuer\n * @prop {?string} callbackUrl\n * @prop {?boolean} requireAuthentication\n */\n\n/**\n * \n * @param {ImplicitConfig} cfg \n */\nexport function configure(cfg) {\n    console.log('config', cfg);\n    if (!cfg) {\n        throw new Error('cfg must be defined');\n    }\n    if (!cfg.clientId) {\n        throw new Error('clientId must be specified');\n    }\n    config = Object.assign({\n        issuer: DEFAULT_ISSUER,\n        callbackUrl: `${location.origin}${location.pathname}`,\n        requireAuthentication: false,\n    }, cfg);\n\n    listen(authn.EVENT_LOGIN_REQUESTED, startLogin);\n    listen(authn.EVENT_LOGOUT_REQUESTED, startLogout);\n    listen(authn.EVENT_REFRESH_REQUESTED, startRefresh);\n    listen(authn.EVENT_CURRENT_INFO_REQUESTED, handleCurrentInfoRequest);\n\n    maybeHandleAuthenticationCallback();\n}\n\nfunction maybeHandleAuthenticationCallback() {\n    if (!isAuthenticationCallback()) {\n        console.log('Not an auth callback');\n        state(authn.STATE_UNAUTHENTICATED);\n        return;\n    }\n    state(authn.STATE_AUTHENTICATING);\n    const params = new URLSearchParams(window.location.hash.substring(1));\n    if (params.has('error')) {\n        const error = {\n            type: params.get('error'),\n            description: params.get('error_description'),\n            uri: params.get('error_uri')\n        };\n        state(\n            authn.STATE_ERROR,\n            null,\n            null,\n            error\n        );\n        return;\n    }\n\n    const csrf = params.get('state');\n\n    window.location.hash = '';\n\n    let pageData;\n    try {\n        pageData = validateCsrfAndGetPageData(csrf);\n    } catch (err) {\n        state(authn.STATE_ERROR, null, null, {\n            type: 'oauth-state-mismatch',\n            description: err.message || err,\n        });\n        return;\n    }\n\n    clearSavedStateFor('s');\n\n    const accessToken = params.get('access_token');\n    const expiresIn = Number(params.get('expires_in'));\n    const authHeader = `Bearer ${accessToken}`;\n    const expiresAt = new Date(Date.now() + (expiresIn * 1000));\n\n    fetch('https://api.byu.edu/openid-userinfo/v1/userinfo?schema=openid', {\n        method: 'GET',\n        headers: new Headers({ 'Accept': 'application/json', 'authorization': authHeader }),\n        mode: 'cors',\n    }).then(function (resp) {\n        return resp.json();\n    }).then(function (json) {\n        console.log('got user info', json);\n\n        const roClaims = getClaims(json, CLAIMS_PREFIX_RESOURCE_OWNER);\n        const clientClaims = getClaims(json, CLAIMS_PREFIX_CLIENT);\n        const wso2Claims = getClaims(json, CLAIMS_PREFIX_WSO2);\n\n        console.log('claims', roClaims, clientClaims, wso2Claims);\n\n        const familyNamePosition = roClaims.surname_position;\n        const givenName = json.given_name;\n        const familyName = json.family_name;\n\n        const displayName = familyNamePosition === 'F' ? `${familyName} ${givenName}` : `${givenName} ${familyName}`;\n\n        const user = {\n            personId: roClaims.person_id,\n            byuId: roClaims.byu_id,\n            netId: roClaims.net_id,\n            name: {\n                sortName: roClaims.sort_name,\n                displayName,\n                givenName,\n                familyName,\n                familyNamePosition,\n            },\n            rawUserInfo: json\n        };\n\n        const token = {\n            bearer: accessToken,\n            authorizationHeader: authHeader,\n            expiresAt,\n            client: {\n                id: wso2Claims.client_id,\n                byuId: clientClaims.byu_id,\n                appName: wso2Claims.applicationname,\n            },\n            rawUserInfo: json\n        };\n\n        state(authn.STATE_AUTHENTICATED, token, user);\n    });\n}\n\nconst CLAIMS_PREFIX_RESOURCE_OWNER = 'http://byu.edu/claims/resourceowner_';\nconst CLAIMS_PREFIX_CLIENT = 'http://byu.edu/claims/client_';\nconst CLAIMS_PREFIX_WSO2 = 'http://wso2.org/claims/';\n\nfunction getClaims(userInfo, prefix) {\n    return Object.keys(userInfo).filter(k => k.startsWith(prefix))\n        .reduce((agg, key) => {\n            agg[key.substr(prefix.length)] = userInfo[key];\n            return agg;\n        }, {});\n}\n\nfunction isAuthenticationCallback() {\n    const isCallbackUrl = window.location.href.indexOf(config.callbackUrl) === 0;\n    console.log(window.location.href, config.callbackUrl, window.location.href.indexOf(config.callbackUrl));\n    const hasHash = !!window.location.hash;\n\n    console.log('hasHash', hasHash);\n    if (!isCallbackUrl) {\n        return false;\n    } else if (!hasHash) {\n        return false;\n    }\n    const params = new URLSearchParams(window.location.hash.substring(1));\n    console.log('params', params);\n    if (params.has('access_token') || params.has('error')) {\n        console.log('has params');\n        return true;\n    }\n    return false;\n}\n\nfunction state(state, token, user, error) {\n    store = Object.freeze({ state, token, user, error });\n    dispatch(authn.EVENT_STATE_CHANGE, store);\n}\n\nexport function startLogin() {\n    console.log('startLogin', config);\n\n    const csrf = saveLoginToken(randomString(), {});\n\n    console.log('csrf', csrf);\n\n    const loginUrl = `https://api.byu.edu/authorize?response_type=token&client_id=${config.clientId}&redirect_uri=${encodeURIComponent(config.callbackUrl)}&scope=openid&state=${csrf}`;\n\n    console.log('loginUrl', loginUrl);\n    window.location = loginUrl;\n}\n\nexport function startLogout() {\n    console.log('startLogout');\n\n    window.location = 'http://api.byu.edu/logout?redirect_url=' + config.callbackUrl;\n    //https://api.byu.edu/revoke\n\n    //TODO: WSO2 Identity Server 5.1 allows us to revoke implicit tokens.  Once that's done, we'll need to do this.\n    // const url = `https://api.byu.edu/revoke`;\n\n    // const form = new URLSearchParams();\n    // form.set('token', store.token.bearer);\n    // form.set('client_id', config.clientId);\n    // form.set('token_type_hint', 'access_token');\n\n    // console.log('logout url', url);\n\n    // fetch(url, {\n    //     method: 'POST',\n    //     body: form,\n    //     // headers: {\n    //     //     'Content-Type': 'application/x-www-form-urlencoded'\n    //     // }\n    // }).then(result => {\n    //     console.log('done with logout', result);\n    // });\n}\n\nfunction saveLoginToken(token, pageState) {\n    const name = getStorageName(config.clientId);\n    const value = `${token}.${btoa(JSON.stringify(pageState))}`;\n\n    let type;\n    if (storageAvailable('sessionStorage')) {\n        window.sessionStorage.setItem(name, value);\n        type = TOKEN_STORE_TYPE_SESSION;\n    } else {\n        document.cookie = `${name}=${value};max-age=300`;\n        type = TOKEN_STORE_TYPE_COOKIE;\n    }\n    return type + '.' + token;\n}\n\nfunction getStorageName(clientId) {\n    return `oauth-state-${encodeURIComponent(clientId)}`;\n}\n\nconst TOKEN_STORE_TYPE_SESSION = 's';\nconst TOKEN_STORE_TYPE_COOKIE = 'c';\n\nfunction validateCsrfAndGetPageData(csrf) {\n    const [type, token] = csrf.split('.');\n    const possibleValues = getSavedStateFor(type);\n    \n    if (possibleValues.length === 0) {\n        console.error('No OAuth state has been stored, or it has expired');\n        throw new Error('Your authentication session has expired or something has gone wrong.');\n    } \n    const found = possibleValues.map(v => v.split('.'))\n        .find(([key, data]) => key === token);\n    \n    if (!found) {\n        console.error('Authentication state mismatch - no saved values match CSRF token');\n        throw new Error('Your saved authentication information does not match. Please try again.');\n    }\n\n    const pageData = found[1];\n\n    return JSON.parse(atob(pageData));\n}\n\nfunction getSavedStateFor(type) {\n    const name = getStorageName(config.clientId);\n    switch (type) {\n        case TOKEN_STORE_TYPE_SESSION:\n            return [window.sessionStorage.getItem(name)];\n        case TOKEN_STORE_TYPE_COOKIE:\n            const values = [];\n            (document.cookie || '').split(';').map(c => c.trim()).forEach(cookie => {\n                if (cookie.indexOf(name + '=') === 0) {\n                    values.push(cookie.split('=', 2)[1]);\n                }\n            });\n            return values;\n    }\n}\n\nfunction clearSavedStateFor(type) {\n    const name = getStorageName(config.clientId);\n    switch (type) {\n        case TOKEN_STORE_TYPE_SESSION:\n            window.sessionStorage.removeItem(name);\n            break;\n        case TOKEN_STORE_TYPE_COOKIE:\n            document.cookie = name + '=null;expires=Thu, 01 Jan 1970 00:00:00 GMT';\n            break;\n    }\n}\n\nexport function startRefresh() {\n    startLogin();\n}\n\nexport function handleCurrentInfoRequest({ callback }) {\n    callback(store);\n}\n\nfunction storageAvailable(type) {\n    try {\n        var storage = window[type],\n            x = '__storage_test__';\n        storage.setItem(x, x);\n        storage.removeItem(x);\n        return true;\n    }\n    catch (e) {\n        return e instanceof DOMException && (\n            // everything except Firefox\n            e.code === 22 ||\n            // Firefox\n            e.code === 1014 ||\n            // test name field too, because code might not be present\n            // everything except Firefox\n            e.name === 'QuotaExceededError' ||\n            // Firefox\n            e.name === 'NS_ERROR_DOM_QUOTA_REACHED') &&\n            // acknowledge QuotaExceededError only if there's something already stored\n            storage.length !== 0;\n    }\n}\n\nfunction randomString() {\n    let idArray = new Uint32Array(3);\n    const crypto = window.crypto || window.msCrypto;\n    crypto.getRandomValues(idArray);\n\n    return idArray.reduce((str, cur) => str + cur.toString(16), '');\n}\n\nfunction listen(event, listener) {\n    console.log('listening to', event);\n    if (observers.hasOwnProperty(event)) {\n        throw new Error('A listener is already registered for ' + event);\n    }\n    const obs = observers[event] = function (e) { listener(e.detail) };\n    document.addEventListener(event, obs, false);\n}\n\nfunction dispatch(name, detail) {\n    let event;\n    if (typeof window.CustomEvent === 'function') {\n        event = new CustomEvent(name, { detail });\n    } else {\n        event = document.createEvent('CustomEvent');\n        event.initCustomEvent(name, true, false, detail);\n    }\n    document.dispatchEvent(event);\n}\n"],"names":["const","config","EVENT_PREFIX","EVENT_STATE_CHANGE","EVENT_LOGIN_REQUESTED","EVENT_LOGOUT_REQUESTED","EVENT_REFRESH_REQUESTED","EVENT_CURRENT_INFO_REQUESTED","STATE_UNAUTHENTICATED","STATE_AUTHENTICATED","STATE_AUTHENTICATING","STATE_ERROR","DEFAULT_ISSUER","observers","store","Object","freeze","state","CLAIMS_PREFIX_RESOURCE_OWNER","CLAIMS_PREFIX_CLIENT","CLAIMS_PREFIX_WSO2","getClaims","userInfo","prefix","keys","filter","k","startsWith","reduce","agg","key","substr","length","token","user","error","name","detail","let","event","window","CustomEvent","document","createEvent","initCustomEvent","dispatchEvent","dispatch","authn.EVENT_STATE_CHANGE","startLogin","console","log","idArray","csrf","pageState","type","getStorageName","clientId","value","btoa","JSON","stringify","storage","x","setItem","removeItem","e","DOMException","code","storageAvailable","cookie","TOKEN_STORE_TYPE_COOKIE","sessionStorage","TOKEN_STORE_TYPE_SESSION","saveLoginToken","Uint32Array","crypto","msCrypto","getRandomValues","str","cur","toString","loginUrl","encodeURIComponent","callbackUrl","location","startLogout","startRefresh","handleCurrentInfoRequest","ref","callback","listen","listener","hasOwnProperty","Error","obs","addEventListener","cfg","assign","issuer","requireAuthentication","authn.EVENT_LOGIN_REQUESTED","authn.EVENT_LOGOUT_REQUESTED","authn.EVENT_REFRESH_REQUESTED","authn.EVENT_CURRENT_INFO_REQUESTED","isCallbackUrl","href","indexOf","hasHash","hash","params","URLSearchParams","substring","has","isAuthenticationCallback","authn.STATE_UNAUTHENTICATED","authn.STATE_AUTHENTICATING","get","description","uri","authn.STATE_ERROR","split","possibleValues","getItem","values","map","c","trim","forEach","push","getSavedStateFor","found","v","find","pageData","parse","atob","validateCsrfAndGetPageData","err","message","clearSavedStateFor","accessToken","expiresIn","Number","authHeader","expiresAt","Date","now","fetch","method","headers","Headers","Accept","authorization","mode","then","resp","json","roClaims","clientClaims","wso2Claims","familyNamePosition","surname_position","givenName","given_name","familyName","family_name","displayName","personId","person_id","byuId","byu_id","netId","net_id","sortName","sort_name","rawUserInfo","bearer","authorizationHeader","client","id","client_id","appName","applicationname","authn.STATE_AUTHENTICATED","maybeHandleAuthenticationCallback"],"mappings":"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"}